# -*- coding: utf-8 -*-
"""03_link_fund_models

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p5rNSa7a1LVVsgvuLG7qPtiVIM90jCKZ
"""



"""## 3. Link, activity and funding rates for treatment groups
Funding rate - The percentage of unfunded users who make their first deposit within the observation window.

"""

fund_exp_df = user_event_df[user_event_df['num_received_email']>0].groupby('group_name')['user_uuid'].count().reset_index()
fund_exp_df = fund_exp_df.rename(columns = {'user_uuid':'num_users_received_email'})

# funding rate
temp = user_event_df[user_event_df['first_funded_at'].notnull()].groupby('group_name')['user_uuid'].count().reset_index()
fund_exp_df['num_funded'] = temp['user_uuid']
fund_exp_df['funding_rate'] = fund_exp_df['num_funded'] /fund_exp_df['num_users_received_email']

# link rate
temp = user_event_df[user_event_df['first_linked_bank_account_at'].notnull()].groupby('group_name')['user_uuid'].count().reset_index()
fund_exp_df['num_link'] = temp['user_uuid']
fund_exp_df['link_rate'] = fund_exp_df['num_link'] /fund_exp_df['num_users_received_email']
fund_exp_df.loc[fund_exp_df['link_rate']>1,'link_rate'] = 1

# activity rate
act_list = []
for a in user_event_df.columns:
    if '_event_count' in a:
        act_list.append(a)

temp = user_event_df[user_event_df[act_list].sum(axis=1)>0].groupby('group_name')['user_uuid'].count().reset_index()
fund_exp_df['num_act'] = temp['user_uuid']
fund_exp_df['act_rate'] = fund_exp_df['num_act'] /fund_exp_df['num_users_received_email']
fund_exp_df.loc[fund_exp_df['act_rate']>1,'act_rate'] = 1

fund_exp_df.head(50)

print('overall funding rate: ')
print(fund_exp_df['num_funded'].sum() /fund_exp_df['num_users_received_email'].sum())

"""# Load the current status for control groups.

Thay have the same sagmentation rules in the beginning of the experiment.  
These users did not received any Emails during the experiment.


"""

fund_control_df = pd.read_csv('/content/drive/MyDrive/Email_project/control_groups_rate.csv')
fund_control_df.head()